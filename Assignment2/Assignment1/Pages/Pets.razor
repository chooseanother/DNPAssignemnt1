@using Models
@using Data
@inject IFamilyDataService FamilyData

@if (petsToShow == null)
{
    <p>
        <em>Loading...</em>
    </p>
}
else if (!petsToShow.Any())
{
    <p>
        <em>No Pet items exists</em>
    </p>
}
else
{
    <h2>Pets</h2>
    <table class="table">
        <thead>
        <tr>
            <th>Name</th>
            <th>Species</th>
            <th>Age</th>
        </tr>
        </thead>
        <tbody>
        @foreach (var item in petsToShow)
        {
            <tr>
                <td>@item.Name</td>
                <td>@item.Species</td>
                <td>@item.Age</td>
            </tr>
        }
        </tbody>
    </table>
}

@code {
    [Parameter]
    public string? FamilyToShow { get; set; }
    
    private IList<Pet> allPets;
    private IList<Pet> petsToShow;
    
    protected override async Task OnInitializedAsync()
    {
        allPets = new List<Pet>();
        if (FamilyToShow == null)
        {
            foreach (var family in FamilyData.GetFamilies())
            {
                if (family.Children.Any())
                    ((List<Pet>)allPets).AddRange(family.Pets);
            }
        }
        else
        {
            var streetInfo = FamilyToShow.Split(",");
            allPets = FamilyData.Get(streetInfo[0], Int32.Parse(streetInfo[1])).Pets;
        }
        petsToShow = allPets;
    }
}